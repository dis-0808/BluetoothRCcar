/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(230, 174, 215));
    add(box1);

    w.setXY(280, 215);
    w.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    w.setLabelText(touchgfx::TypedText(T___SINGLEUSE_5LRS));
    w.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    w.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    w.setAction(buttonCallback);
    add(w);

    a.setXY(0, 215);
    a.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    a.setLabelText(touchgfx::TypedText(T___SINGLEUSE_X0TK));
    a.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    a.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(a);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &w)
    {
        //w
        //When w clicked execute C++ code
        //Execute C++ code
        HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
    }
}
